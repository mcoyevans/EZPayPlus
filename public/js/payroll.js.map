{"version":3,"sources":["payroll.module.js","controllers/payroll-content-container.controller.js","controllers/payroll-entry-content-container-controller.js","controllers/payroll-process-content-container.controller.js","controllers/dialogs/payroll-process-dialog.controller.js","controllers/subheaders/payroll-subheader.controller.js","controllers/toolbars/payroll-entry-toolbar.controller.js","controllers/toolbars/payroll-process-toolbar.controller.js","controllers/toolbars/payroll-toolbar.controller.js"],"names":[],"mappingszxYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvtfile":"payroll.js","sourcesContent":["var payroll = angular.module('payroll', []);","payroll\r\n\t.controller('payrollContentContainerController', ['$scope', 'Helper', function($scope, Helper){\r\n\t\t$scope.$emit('closeSidenav');\r\n\t\t/*\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.subheader = {};\r\n\t\t$scope.subheader.show = true;\r\n\r\n\t\t$scope.subheader.toggleActive = function(){\r\n\t\t\t$scope.showInactive = !$scope.showInactive;\r\n\t\t}\r\n\t\t$scope.subheader.sortBy = function(filter){\r\n\t\t\tfilter.sortReverse = !filter.sortReverse;\t\t\t\r\n\t\t\t$scope.sortType = filter.type;\r\n\t\t\t$scope.sortReverse = filter.sortReverse;\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\t * Object for toolbar\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar = {};\r\n\t\t\r\n\t\t/*\r\n\t\t * Object for fab\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.fab = {};\r\n\t\t$scope.fab.icon = 'mdi-plus';\r\n\r\n\t\t/* Action originates from subheader */\r\n\t\t$scope.$on('setInit', function(){\r\n\t\t\tvar current = Helper.fetch();\r\n\r\n\t\t\t$scope.subheader.current = current;\r\n\t\t\t$scope.isLoading = true;\r\n\t\t\t$scope.init(current);\r\n\t\t\t$scope.$broadcast('close');\r\n\t\t\t$scope.showInactive = false;\r\n\r\n\t\t\t$scope.view = function(data){\r\n\t\t\t\t$scope.subheader.current.view(data);\r\n\t\t\t}\r\n\r\n\t\t\t$scope.edit = function(data){\r\n\t\t\t\t$scope.subheader.current.menu[0].action(data);\r\n\t\t\t}\r\n\r\n\t\t\t$scope.delete = function(data){\r\n\t\t\t\t$scope.subheader.current.menu[1].action(data);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t/* Action originates from toolbar */\r\n\t\t$scope.$on('search', function(){\r\n\t\t\t$scope.subheader.current.request.search = $scope.toolbar.searchText;\r\n\t\t\t$scope.refresh();\r\n\t\t\t$scope.showInactive = true;\r\n\t\t});\r\n\r\n\t\t/* Listens for any request for refresh */\r\n\t\t$scope.$on('refresh', function(){\r\n\t\t\t$scope.subheader.current.request.search = null;\r\n\t\t\t$scope.$broadcast('close');\r\n\t\t\t$scope.refresh();\r\n\t\t});\r\n\r\n\t\t/* Formats every data in the paginated call */\r\n\t\tvar pushItem = function(data){\r\n\t\t\tif($scope.subheader.current.label == 'Payroll Processes')\r\n\t\t\t{\r\n\t\t\t\tdata.payroll_period.start_cut_off = new Date(data.payroll_period.start_cut_off);\r\n\t\t\t\tdata.payroll_period.end_cut_off = new Date(data.payroll_period.end_cut_off);\r\n\t\t\t\tdata.payroll_period.payout = new Date(data.payroll_period.payout);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t$scope.init = function(query, refresh){\r\n\t\t\t$scope.type = {};\r\n\t\t\t$scope.type.items = [];\r\n\t\t\t$scope.toolbar.items = [];\r\n\r\n\t\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t\t$scope.type.page = 2;\r\n\r\n\t\t\tHelper.post(query.url, query.request)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.type.details = data;\r\n\t\t\t\t\t$scope.type.items = data.data;\r\n\t\t\t\t\t$scope.type.show = true;\r\n\r\n\t\t\t\t\t$scope.fab.label = query.label;\r\n\t\t\t\t\t$scope.fab.action = function(){\r\n\t\t\t\t\t\tHelper.set(query.fab);\r\n\r\n\t\t\t\t\t\tHelper.customDialog(query.fab)\r\n\t\t\t\t\t\t\t.then(function(){\r\n\t\t\t\t\t\t\t\tHelper.notify(query.fab.message);\r\n\t\t\t\t\t\t\t\t$scope.refresh();\r\n\t\t\t\t\t\t\t}, function(){\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$scope.fab.show = true;\r\n\r\n\t\t\t\t\tif(data.data.length){\r\n\t\t\t\t\t\t// iterate over each record and set the format\r\n\t\t\t\t\t\tangular.forEach(data.data, function(item){\r\n\t\t\t\t\t\t\tpushItem(item);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$scope.type.paginateLoad = function(){\r\n\t\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\t\tif($scope.type.busy || ($scope.type.page > $scope.type.details.last_page)){\r\n\t\t\t\t\t\t\t$scope.isLoading = false;\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t\t *\r\n\t\t\t\t\t\t*/\r\n\t\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t\t$scope.type.busy = true;\r\n\t\t\t\t\t\t$scope.isLoading = true;\r\n\t\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\t\tHelper.post(query.url + '?page=' + $scope.type.page, query.request)\r\n\t\t\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t\t$scope.type.page++;\r\n\r\n\t\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\t\tangular.forEach(data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t\tpushItem(item);\r\n\t\t\t\t\t\t\t\t\t$scope.type.items.push(item);\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t\t$scope.type.busy = false;\r\n\t\t\t\t\t\t\t\t$scope.isLoading = false;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.refresh = function(){\r\n\t\t\t$scope.isLoading = true;\r\n  \t\t\t$scope.type.show = false;\r\n\r\n  \t\t\t$scope.init($scope.subheader.current);\r\n\t\t};\r\n\t}]);","payroll\r\n\t.controller('payrollEntryContentContainerController', ['$scope', '$state', '$stateParams', 'Helper', function($scope, $state, $stateParams, Helper){\r\n\t\t$scope.$emit('closeSidenav');\r\n\r\n\t\tvar payrollProcessID = $stateParams.payrollProcessID;\r\n\r\n\t\t$scope.form = {}\r\n\r\n\t\t$scope.payroll_entry = {};\r\n\r\n\t\t/*\r\n\t\t * Object for toolbar\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar = {};\r\n\r\n\r\n\t\t/*\r\n\t\t * Object for fab\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.fab = {};\r\n\t\t$scope.fab.icon = 'mdi-check';\r\n\t\t$scope.fab.label = 'Submit';\r\n\t\t$scope.fab.show = true;\r\n\r\n\t\t$scope.fab.action = function(){\r\n\t\t\tif($scope.form.payrollEntryForm.$invalid){\r\n\t\t\t\tangular.forEach($scope.form.payrollEntryForm.$error, function(field){\r\n\t\t\t\t\tangular.forEach(field, function(errorField){\r\n\t\t\t\t\t\terrorField.$setTouched();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t\t\tHelper.alert('Oops!', 'Kindly check form for errors.');\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(!$scope.duplicate)\r\n\t\t\t{\r\n\t\t\t\t$scope.busy = true;\r\n\r\n\t\t\t\tHelper.preload();\r\n\r\n\t\t\t\tif(!$stateParams.payrollEntryID)\r\n\t\t\t\t{\r\n\t\t\t\t\tHelper.post('/payroll-entry', $scope.payroll_entry)\r\n\t\t\t\t\t\t.success(function(duplicate){\r\n\t\t\t\t\t\t\tHelper.stop();\r\n\r\n\t\t\t\t\t\t\tif(duplicate){\r\n\t\t\t\t\t\t\t\t$scope.duplicate = duplicate;\r\n\t\t\t\t\t\t\t\t$scope.busy = false;\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t$state.go('main.payroll-process', {'payrollProcessID': payrollProcessID});\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\t\t$scope.busy = false;\r\n\t\t\t\t\t\t\t$scope.error = true;\r\n\r\n\t\t\t\t\t\t\tHelper.error();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tHelper.put('/payroll-entry/' + $stateParams.payrollEntryID, $scope.payroll_entry)\r\n\t\t\t\t\t\t.success(function(duplicate){\r\n\t\t\t\t\t\t\tHelper.stop();\r\n\r\n\t\t\t\t\t\t\tif(duplicate){\r\n\t\t\t\t\t\t\t\t$scope.duplicate = duplicate;\r\n\t\t\t\t\t\t\t\t$scope.busy = false;\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t$state.go('main.payroll-process', {'payrollProcessID': $stateParams.payrollProcessID});\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\t\t$scope.busy = false;\r\n\t\t\t\t\t\t\t$scope.error = true;\r\n\r\n\t\t\t\t\t\t\tHelper.error();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t$scope.setEmployee = function(){\r\n\t\t\t$scope.payroll_entry.allowances = [];\r\n\t\t\t$scope.payroll_entry.deductions = [];\r\n\r\n\t\t\tangular.forEach($scope.payroll_entry.employee.allowance_types, function(item, key){\r\n\t\t\t\tvar allowance = {};\r\n\r\n\t\t\t\tallowance.name = item.name;\r\n\t\t\t\tallowance.description = item.description;\r\n\t\t\t\tallowance.amount = item.pivot.amount;\r\n\t\t\t\tallowance.employee_allowance_type_id = item.pivot.id;\r\n\r\n\t\t\t\t$scope.payroll_entry.allowances[key] = allowance;\r\n\t\t\t});\r\n\r\n\t\t\tangular.forEach($scope.payroll_entry.employee.deduction_types, function(item, key){\r\n\t\t\t\tvar deduction = {};\r\n\r\n\t\t\t\tdeduction.name = item.name;\r\n\t\t\t\tdeduction.description = item.description;\r\n\t\t\t\tdeduction.amount = item.pivot.amount;\r\n\t\t\t\tdeduction.employee_deduction_type_id = item.pivot.id;\r\n\r\n\t\t\t\t$scope.payroll_entry.deductions[key] = deduction;\r\n\t\t\t});\r\n\r\n\t\t\t$scope.daily_rate = ($scope.payroll_entry.employee.basic_salary * 12) / $scope.payroll_process.payroll.working_days_per_year;\r\n\t\t\t$scope.hourly_rate = ($scope.payroll_entry.employee.basic_salary * 12) / $scope.payroll_process.payroll.working_days_per_year / $scope.payroll_process.payroll.working_hours_per_day;\r\n\r\n\t\t\t$scope.regularWorkingHoursPay();\r\n\t\t\t$scope.overtimePay();\r\n\t\t\t$scope.nightDifferentialPay();\r\n\t\t\t$scope.overtimeNightDifferentialPay();\r\n\t\t}\r\n\r\n\t\t$scope.setMaxRegularHours = function(){\r\n\t\t\tvar days_worked = $scope.payroll_entry.days_absent ? $scope.payroll_entry.regular_working_days - $scope.payroll_entry.days_absent : $scope.payroll_entry.regular_working_days;\r\n\r\n\t\t\t$scope.max_regular_work_hours = days_worked * $scope.payroll_process.payroll.working_hours_per_day;\r\n\r\n\t\t\t$scope.max_rest_day_work_hours = ($scope.max_regular_working_days - $scope.payroll_entry.regular_working_days - $scope.holidays.length) * $scope.payroll_process.payroll.working_hours_per_day;\r\n\t\t\t\r\n\t\t\t$scope.payroll_entry.absent = $scope.payroll_entry.days_absent ? $scope.payroll_entry.days_absent * $scope.daily_rate : 0;\r\n\t\t}\r\n\r\n\t\t// Calculating\r\n\t\t$scope.regularWorkingHoursPay = function(){\r\n\t\t\tif($scope.payroll_process.payroll.time_interpretation.name == 'Monthly')\r\n\t\t\t{\r\n\t\t\t\t$scope.payroll_entry.regular_working_hours_pay = $scope.payroll_entry.regular_working_hours ? $scope.payroll_entry.employee.basic_salary / $scope.basic_pay_factor : null;\r\n\t\t\t}\r\n\t\t\telse if($scope.payroll_process.payroll.time_interpretation.name == 'Daily')\r\n\t\t\t{\r\n\t\t\t\t$scope.payroll_entry.regular_working_hours_pay = $scope.payroll_entry.regular_working_hours ? $scope.payroll_entry.regular_working_hours * $scope.hourly_rate * $scope.payroll_process.time_interpretation.\tregular_working_hours : null;\r\n\t\t\t}\r\n\r\n\t\t\t$scope.payroll_entry.hours_tardy = $scope.max_regular_work_hours - $scope.payroll_entry.regular_working_hours;\r\n\t\t\t$scope.payroll_entry.tardy = $scope.payroll_entry.hours_tardy * $scope.hourly_rate;\r\n\t\t}\r\n\r\n\t\t$scope.overtimePay = function(){\r\n\t\t\t$scope.payroll_entry.overtime_pay = $scope.payroll_entry.overtime ? $scope.payroll_entry.overtime * $scope.hourly_rate * $scope.payroll_process.payroll.time_interpretation.overtime : null;\r\n\t\t}\r\n\r\n\t\t$scope.nightDifferentialPay = function(){\r\n\t\t\t$scope.payroll_entry.night_differential_pay = $scope.payroll_entry.night_differential ? $scope.payroll_entry.night_differential * $scope.hourly_rate * $scope.payroll_process.payroll.time_interpretation.night_differential : null;\r\n\t\t}\r\n\r\n\t\t$scope.overtimeNightDifferentialPay = function(){\r\n\t\t\t$scope.payroll_entry.overtime_night_differential_pay = $scope.payroll_entry.overtime_night_differential ? $scope.hourly_rate * $scope.payroll_entry.overtime_night_differential * $scope.payroll_process.payroll.time_interpretation.overtime_night_differential : null;\r\n\t\t}\r\n\r\n\t\t$scope.regularHolidayPay = function(){\r\n\t\t\t$scope.payroll_entry.regular_holiday_pay = \t$scope.payroll_entry.regular_holiday ? $scope.payroll_entry.regular_holiday * $scope.hourly_rate * $scope.payroll_process.payroll.time_interpretation.regular_holiday_rate : null;\r\n\t\t}\r\n\r\n\t\t$scope.regularHolidayOvertimePay = function(){\r\n\t\t\t$scope.payroll_entry.regular_holiday_overtime_pay = $scope.payroll_entry.regular_holiday_overtime ? $scope.payroll_entry.regular_holiday_overtime * $scope.hourly_rate * $scope.payroll_process.payroll.time_interpretation.regular_holiday_overtime : null;\r\n\t\t}\r\n\r\n\t\t$scope.regularHolidayNightDifferentialPay = function(){\r\n\t\t\t$scope.payroll_entry.regular_holiday_night_differential_pay = $scope.payroll_entry.regular_holiday_night_differential ? $scope.payroll_entry.regular_holiday_night_differential * $scope.hourly_rate * $scope.payroll_process.payroll.time_interpretation.regular_holiday_night_differential : null;\r\n\t\t}\r\n\r\n\t\t$scope.regularHolidayOvertimeNightDifferentialPay = function(){\r\n\t\t\t$scope.payroll_entry.regular_holiday_overtime_night_differential_pay = $scope.payroll_entry.regular_holiday_overtime_night_differential ? $scope.payroll_entry.regular_holiday_overtime_night_differential * $scope.hourly_rate * $scope.payroll_process.payroll.time_interpretation.regular_holiday_overtime_night_differential : null;\r\n\t\t}\r\n\r\n\t\t$scope.specialHolidayPay = function(){\r\n\t\t\t$scope.payroll_entry.special_holiday_pay = \t$scope.payroll_entry.special_holiday ? $scope.payroll_entry.special_holiday * $scope.hourly_rate * $scope.payroll_process.payroll.time_interpretation.special_holiday_rate : null;\r\n\t\t}\r\n\r\n\t\t$scope.specialHolidayOvertimePay = function(){\r\n\t\t\t$scope.payroll_entry.special_holiday_overtime_pay = $scope.payroll_entry.special_holiday_overtime ? $scope.payroll_entry.special_holiday_overtime * $scope.hourly_rate * $scope.payroll_process.payroll.time_interpretation.special_holiday_overtime : null;\r\n\t\t}\r\n\r\n\t\t$scope.specialHolidayNightDifferentialPay = function(){\r\n\t\t\t$scope.payroll_entry.special_holiday_night_differential_pay = $scope.payroll_entry.special_holiday_night_differential ? $scope.payroll_entry.special_holiday_night_differential * $scope.hourly_rate * $scope.payroll_process.payroll.time_interpretation.special_holiday_night_differential : null;\r\n\t\t}\r\n\r\n\t\t$scope.specialHolidayOvertimeNightDifferentialPay = function(){\r\n\t\t\t$scope.payroll_entry.special_holiday_overtime_night_differential_pay = $scope.payroll_entry.special_holiday_overtime_night_differential ? $scope.payroll_entry.special_holiday_overtime_night_differential * $scope.hourly_rate * $scope.payroll_process.payroll.time_interpretation.special_holiday_overtime_night_differential : null;\r\n\t\t}\r\n\r\n\t\t$scope.restDayPay = function(){\r\n\t\t\t$scope.payroll_entry.rest_day_pay = $scope.payroll_entry.rest_day ? $scope.payroll_entry.rest_day * $scope.hourly_rate * $scope.payroll_process.payroll.time_interpretation.rest_day_rate : null;\r\n\t\t}\r\n\r\n\t\t$scope.restDayOvertimePay = function(){\r\n\t\t\t$scope.payroll_entry.rest_day_overtime_pay = $scope.payroll_entry.rest_day_overtime ? $scope.payroll_entry.rest_day_overtime * $scope.hourly_rate * $scope.payroll_process.payroll.time_interpretation.rest_day_overtime : null;\r\n\t\t}\r\n\r\n\t\t$scope.restDayNightDifferentialPay = function(){\r\n\t\t\t$scope.payroll_entry.rest_day_night_differential_pay = $scope.payroll_entry.rest_day_night_differential ? $scope.payroll_entry.rest_day_night_differential * $scope.hourly_rate * $scope.payroll_process.payroll.time_interpretation.rest_day_night_differential : null;\r\n\t\t}\r\n\r\n\t\t$scope.restDayOvertimeNightDifferentialPay = function(){\r\n\t\t\t$scope.payroll_entry.rest_day_overtime_night_differential_pay = $scope.payroll_entry.rest_day_overtime_night_differential ? $scope.payroll_entry.rest_day_overtime_night_differential * $scope.hourly_rate * $scope.payroll_process.payroll.time_interpretation.rest_day_overtime_night_differential : null;\r\n\t\t}\r\n\r\n\t\t$scope.regularHolidayRestDayPay = function(){\r\n\t\t\t$scope.payroll_entry.regular_holiday_rest_day_pay = $scope.payroll_entry.regular_holiday_rest_day ? $scope.payroll_entry.regular_holiday_rest_day * $scope.hourly_rate * $scope.payroll_process.payroll.time_interpretation.regular_holiday_rest_day_rate : null;\r\n\t\t}\r\n\r\n\t\t$scope.regularHolidayRestDayOvertimePay = function(){\r\n\t\t\t$scope.payroll_entry.regular_holiday_rest_day_overtime_pay = $scope.payroll_entry.regular_holiday_rest_day_overtime ? $scope.payroll_entry.regular_holiday_rest_day_overtime * $scope.hourly_rate * $scope.payroll_process.payroll.time_interpretation.regular_holiday_rest_day_overtime : null;\r\n\t\t}\r\n\r\n\t\t$scope.regularHolidayRestDayNightDifferentialPay = function(){\r\n\t\t\t$scope.payroll_entry.regular_holiday_rest_day_night_differential_pay = $scope.payroll_entry.regular_holiday_rest_day_night_differential ? $scope.payroll_entry.regular_holiday_rest_day_night_differential * $scope.hourly_rate * $scope.payroll_process.payroll.time_interpretation.regular_holiday_rest_day_night_differential : null;\r\n\t\t}\r\n\r\n\t\t$scope.regularHolidayRestDayOvertimeNightDifferentialPay = function(){\r\n\t\t\t$scope.payroll_entry.regular_holiday_rest_day_overtime_night_differential_pay = $scope.payroll_entry.regular_holiday_rest_day_overtime_night_differential ? $scope.payroll_entry.regular_holiday_rest_day_overtime_night_differential * $scope.hourly_rate * $scope.payroll_process.payroll.time_interpretation.regular_holiday_rest_day_overtime_night_differential : null;\r\n\t\t}\r\n\r\n\t\t$scope.specialHolidayRestDayPay = function(){\r\n\t\t\t$scope.payroll_entry.special_holiday_rest_day_pay = $scope.payroll_entry.special_holiday_rest_day ? $scope.payroll_entry.special_holiday_rest_day * $scope.hourly_rate * $scope.payroll_process.payroll.time_interpretation.special_holiday_rest_day_rate : null;\r\n\t\t}\r\n\r\n\t\t$scope.specialHolidayRestDayOvertimePay = function(){\r\n\t\t\t$scope.payroll_entry.special_holiday_rest_day_overtime_pay = $scope.payroll_entry.special_holiday_rest_day_overtime ? $scope.payroll_entry.special_holiday_rest_day_overtime * $scope.hourly_rate * $scope.payroll_process.payroll.time_interpretation.special_holiday_rest_day_overtime : null;\r\n\t\t}\r\n\r\n\t\t$scope.specialHolidayRestDayNightDifferentialPay = function(){\r\n\t\t\t$scope.payroll_entry.special_holiday_rest_day_night_differential_pay = $scope.payroll_entry.special_holiday_rest_day_night_differential ? $scope.payroll_entry.special_holiday_rest_day_night_differential * $scope.hourly_rate * $scope.payroll_process.payroll.time_interpretation.special_holiday_rest_day_night_differential : null;\r\n\t\t}\r\n\r\n\t\t$scope.specialHolidayRestDayOvertimeNightDifferentialPay = function(){\r\n\t\t\t$scope.payroll_entry.special_holiday_rest_day_overtime_night_differential_pay = $scope.payroll_entry.special_holiday_rest_day_overtime_night_differential ? $scope.payroll_entry.special_holiday_rest_day_overtime_night_differential * $scope.hourly_rate * $scope.payroll_process.payroll.time_interpretation.special_holiday_rest_day_overtime_night_differential : null;\r\n\t\t}\r\n\r\n\t\t$scope.init = function(){\r\n\t\t\tHelper.get('/branch')\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.branches = data;\r\n\t\t\t\t})\r\n\r\n\t\t\tHelper.get('/cost-center')\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.cost_centers = data;\r\n\t\t\t\t})\t\t\t\r\n\r\n\t\t\tvar payroll_process_query = {\r\n\t\t\t\t'with': [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'relation': 'batch',\r\n\t\t\t\t\t\t'withTrashed': false,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'relation': 'payroll.time_interpretation',\r\n\t\t\t\t\t\t'withTrashed': false,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'relation': 'payroll_period',\r\n\t\t\t\t\t\t'withTrashed': false,\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t\t'where': [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'label': 'id',\r\n\t\t\t\t\t\t'condition': '=',\r\n\t\t\t\t\t\t'value': payrollProcessID,\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\t'first': true,\r\n\t\t\t}\r\n\r\n\t\t\tHelper.post('/payroll-process/enlist', payroll_process_query)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\tdata.payroll_period.start_cut_off = new Date(data.payroll_period.start_cut_off);\r\n\t\t\t\t\tdata.payroll_period.end_cut_off = new Date(data.payroll_period.end_cut_off);\r\n\t\t\t\t\tdata.payroll_period.payout = new Date(data.payroll_period.payout);\r\n\r\n\t\t\t\t\tvar timeDiff = Math.abs(data.payroll_period.end_cut_off.getTime() - data.payroll_period.start_cut_off.getTime());\r\n\t\t\t\t\t$scope.max_regular_working_days = Math.ceil(timeDiff / (1000 * 3600 * 24)) + 1;\r\n\r\n\t\t\t\t\t$scope.payroll_process = data;\r\n\r\n\t\t\t\t\tif(data.payroll.pay_frequency == 'Weekly')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$scope.basic_pay_factor = 4;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(data.payroll.pay_frequency == 'Semi-monthly')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$scope.basic_pay_factor = 2;\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(data.payroll.pay_frequency == 'Monthly')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$scope.basic_pay_factor = 1;\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar holiday_query = {\r\n\t\t\t\t\t\t'whereMonth': \r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'label':'date',\r\n\t\t\t\t\t\t\t'value': new Date(data.payroll_period.start_cut_off).getMonth() + 1,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'whereBetweenDay': \r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'label': 'date',\r\n\t\t\t\t\t\t\t'start': new Date(data.payroll_period.start_cut_off).getDate(),\r\n\t\t\t\t\t\t\t'end': new Date(data.payroll_period.end_cut_off).getDate(),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tHelper.post('/holiday/enlist', holiday_query)\r\n\t\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t\tif(data.length)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t$scope.regular_holidays = [];\r\n\t\t\t\t\t\t\t\t$scope.special_holidays = [];\r\n\r\n\t\t\t\t\t\t\t\tangular.forEach(data, function(item){\r\n\t\t\t\t\t\t\t\t\titem.date = new Date(item.date);\r\n\r\n\t\t\t\t\t\t\t\t\tif(item.type == 'Regular Holiday'){\r\n\t\t\t\t\t\t\t\t\t\t$scope.regular_holidays.push(item)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if(item.type == 'Special Non-working Holiday')\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t$scope.special_holidays.push(item)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t$scope.holidays = data;\r\n\r\n\t\t\t\t\t\t\t$scope.max_regular_holiday_regular_hours = $scope.regular_holidays.length * $scope.payroll_process.payroll.working_hours_per_day;\r\n\t\t\t\t\t\t\t$scope.max_special_holiday_regular_hours = $scope.special_holidays.length * $scope.payroll_process.payroll.working_hours_per_day;\r\n\t\t\t\t\t\t})\r\n\r\n\r\n\t\t\t\t\tvar employee_query = {\r\n\t\t\t\t\t\t'with': [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t'relation': 'allowance_types.de_minimis',\r\n\t\t\t\t\t\t\t\t'withTrashed': false,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t'relation': 'deduction_types',\r\n\t\t\t\t\t\t\t\t'withTrashed': false,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t'relation': 'tax_code',\r\n\t\t\t\t\t\t\t\t'withTrashed': false,\t\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t'relation': 'position',\r\n\t\t\t\t\t\t\t\t'withTrashed': false,\t\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\t'where': [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t'label': 'batch_id',\r\n\t\t\t\t\t\t\t\t'condition': '=',\r\n\t\t\t\t\t\t\t\t'value': $scope.payroll_process.batch_id,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\t'whereDoesntHave': [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t'relation': 'payroll_entries',\r\n\t\t\t\t\t\t\t\t'where': [\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t'label': 'payroll_process_id',\r\n\t\t\t\t\t\t\t\t\t\t'condition': '=',\r\n\t\t\t\t\t\t\t\t\t\t'value': $scope.payroll_process.id,\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tHelper.post('/employee/enlist', employee_query)\r\n\t\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t\t$scope.employees = data;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tHelper.error();\r\n\t\t\t\t})\r\n\t\t}();\r\n\t}]);","payroll\r\n\t.controller('payrollProcessContentContainerController', ['$scope', '$state', '$stateParams', 'Helper', function($scope, $state, $stateParams, Helper){\r\n\t\t$scope.$emit('closeSidenav');\r\n\r\n\t\t/*\r\n\t\t * Object for toolbar\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar = {};\r\n\r\n\t\tvar payrollProcessID = $stateParams.payrollProcessID;\r\n\r\n\t\tvar query = {\r\n\t\t\t'with': [\r\n\t\t\t\t{\r\n\t\t\t\t\t'relation': 'payroll',\r\n\t\t\t\t\t'withTrashed': true,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t'relation': 'payroll_period',\r\n\t\t\t\t\t'withTrashed': false,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t\t'where': [\r\n\t\t\t\t{\r\n\t\t\t\t\t'label': 'id',\r\n\t\t\t\t\t'condition': '=',\r\n\t\t\t\t\t'value' : payrollProcessID,\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t'first' : true,\r\n\t\t}\r\n\r\n\t\tHelper.post('/payroll-process/enlist', query)\r\n\t\t\t.success(function(data){\r\n\t\t\t\tif(!data)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn $state.go('page-not-found');\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$scope.payroll_process = data;\r\n\r\n\t\t\t\t$scope.toolbar.parentState = data.payroll.name;\r\n\t\t\t\t$scope.toolbar.childState = new Date(data.payroll_period.start_cut_off).toDateString() + ' - ' + new Date(data.payroll_period.end_cut_off).toDateString();\r\n\r\n\t\t\t})\r\n\r\n\t\t/*\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.subheader = {};\r\n\t\t$scope.subheader.show = true;\r\n\r\n\t\t$scope.subheader.toggleActive = function(){\r\n\t\t\t$scope.showInactive = !$scope.showInactive;\r\n\t\t}\r\n\t\t$scope.subheader.sortBy = function(filter){\r\n\t\t\tfilter.sortReverse = !filter.sortReverse;\t\t\t\r\n\t\t\t$scope.sortType = filter.type;\r\n\t\t\t$scope.sortReverse = filter.sortReverse;\r\n\t\t}\r\n\t\t\r\n\t\t/*\r\n\t\t * Object for fab\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.fab = {};\r\n\t\t$scope.fab.icon = 'mdi-plus';\r\n\r\n\t\t$scope.fab.label = 'Payroll Entry';\r\n\r\n\t\t$scope.fab.action = function(){\r\n\t\t\t$state.go('main.payroll-entry', {'payrollProcessID': payrollProcessID});\r\n\t\t}\r\n\r\n\t\t/* Action originates from toolbar */\r\n\t\t$scope.$on('search', function(){\r\n\t\t\t$scope.request.search = $scope.toolbar.searchText;\r\n\t\t\t$scope.refresh();\r\n\t\t\t$scope.showInactive = true;\r\n\t\t});\r\n\r\n\t\t/* Listens for any request for refresh */\r\n\t\t$scope.$on('refresh', function(){\r\n\t\t\t$scope.request.search = null;\r\n\t\t\t$scope.$broadcast('close');\r\n\t\t\t$scope.refresh();\r\n\t\t});\r\n\r\n\t\t/* Formats every data in the paginated call */\r\n\t\tvar pushItem = function(data){\r\n\t\t\t\r\n\t\t}\r\n\r\n\t\t$scope.init = function(query){\r\n\t\t\t$scope.model = {};\r\n\t\t\t$scope.model.items = [];\r\n\t\t\t$scope.toolbar.items = [];\r\n\r\n\t\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t\t$scope.model.page = 2;\r\n\r\n\t\t\tHelper.post('/payroll-entry/enlist', query)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.model.details = data;\r\n\t\t\t\t\t$scope.model.items = data.data;\r\n\t\t\t\t\t$scope.model.show = true;\r\n\r\n\t\t\t\t\t$scope.fab.show = true;\r\n\r\n\t\t\t\t\tif(data.data.length){\r\n\t\t\t\t\t\t// iterate over each record and set the format\r\n\t\t\t\t\t\tangular.forEach(data.data, function(item){\r\n\t\t\t\t\t\t\tpushItem(item);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$scope.model.paginateLoad = function(){\r\n\t\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\t\tif($scope.model.busy || ($scope.model.page > $scope.model.details.last_page)){\r\n\t\t\t\t\t\t\t$scope.isLoading = false;\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t\t *\r\n\t\t\t\t\t\t*/\r\n\t\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t\t$scope.model.busy = true;\r\n\t\t\t\t\t\t$scope.isLoading = true;\r\n\t\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\t\tHelper.post('/birthday/enlist' + '?page=' + $scope.model.page, query)\r\n\t\t\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t\t$scope.model.page++;\r\n\r\n\t\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\t\tangular.forEach(data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t\tpushItem(item);\r\n\t\t\t\t\t\t\t\t\t$scope.model.items.push(item);\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t\t$scope.model.busy = false;\r\n\t\t\t\t\t\t\t\t$scope.isLoading = false;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.refresh = function(){\r\n\t\t\t$scope.isLoading = true;\r\n  \t\t\t$scope.model.show = false;\r\n\r\n  \t\t\t$scope.init($scope.request);\r\n\t\t};\r\n\r\n\t\t$scope.request = {};\r\n\r\n\t\t$scope.request.paginate = 20;\r\n\r\n\t\t$scope.request.with = [\r\n\t\t\t{\r\n\t\t\t\t'relation':'employee',\r\n\t\t\t\t'withTrashed': false,\r\n\t\t\t},\r\n\t\t];\t\r\n\r\n\t\t$scope.isLoading = true;\r\n\t\t$scope.$broadcast('close');\r\n\r\n\t\t$scope.init($scope.request);\r\n\t}]);","payroll\r\n\t.controller('payrollProcessDialogController', ['$scope', 'Helper', function($scope, Helper){\r\n\t\t$scope.config = Helper.fetch();\r\n\r\n\t\t$scope.payroll_process = {};\r\n\r\n\t\tif($scope.config.action == 'create')\r\n\t\t{\r\n\t\t\t$scope.fetchPayrollPeriod = function(){\r\n\t\t\t\tif($scope.payroll_process.batch_id)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar query = {\r\n\t\t\t\t\t\t'where': [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t'label': 'payroll_id',\r\n\t\t\t\t\t\t\t\t'condition': '=',\r\n\t\t\t\t\t\t\t\t'value': $scope.payroll_process.payroll_id,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\t'whereDoesntHave': [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t'relation':'payroll_process',\r\n\t\t\t\t\t\t\t\t'where': [\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t'label': 'batch_id',\r\n\t\t\t\t\t\t\t\t\t\t'condition': '=',\r\n\t\t\t\t\t\t\t\t\t\t'value': $scope.payroll_process.batch_id,\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\t'orderBy': [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t'column': 'start_cut_off',\r\n\t\t\t\t\t\t\t\t'order': 'desc',\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tHelper.post('/payroll-period/enlist', query)\r\n\t\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t\tangular.forEach(data, function(item){\r\n\t\t\t\t\t\t\t\titem.start_cut_off = new Date(item.start_cut_off);\r\n\t\t\t\t\t\t\t\titem.end_cut_off = new Date(item.end_cut_off);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t$scope.payroll_periods = data;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\telse if($scope.config.action == 'edit')\r\n\t\t{\r\n\t\t\t$scope.fetchPayrollPeriod = function(){\r\n\t\t\t\tif($scope.payroll_process.batch_id)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar query = {\r\n\t\t\t\t\t\t'where': [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t'label': 'payroll_id',\r\n\t\t\t\t\t\t\t\t'condition': '=',\r\n\t\t\t\t\t\t\t\t'value': $scope.payroll_process.payroll_id,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\t'whereDoesntHave': [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t'relation':'payroll_process',\r\n\t\t\t\t\t\t\t\t'where': [\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t'label': 'batch_id',\r\n\t\t\t\t\t\t\t\t\t\t'condition': '=',\r\n\t\t\t\t\t\t\t\t\t\t'value': $scope.payroll_process.batch_id,\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\t'orWhere':[\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t'label': 'id',\r\n\t\t\t\t\t\t\t\t'condition': '=',\r\n\t\t\t\t\t\t\t\t'value': $scope.payroll_process.id,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\t'orderBy': [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t'column': 'start_cut_off',\r\n\t\t\t\t\t\t\t\t'order': 'desc',\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tHelper.post('/payroll-period/enlist', query)\r\n\t\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t\tangular.forEach(data, function(item){\r\n\t\t\t\t\t\t\t\titem.start_cut_off = new Date(item.start_cut_off);\r\n\t\t\t\t\t\t\t\titem.end_cut_off = new Date(item.end_cut_off);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t$scope.payroll_periods = data;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar query = {\r\n\t\t\t\t'where': [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'label': 'id',\r\n\t\t\t\t\t\t'condition': '=',\r\n\t\t\t\t\t\t'value': $scope.config.id,\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t\t'first': true,\r\n\t\t\t}\r\n\r\n\t\t\tHelper.post('/payroll-process/enlist', query)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.payroll_process = data;\r\n\t\t\t\t\t$scope.fetchPayrollPeriod();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tHelper.error();\r\n\t\t\t\t})\r\n\t\t}\r\n\r\n\t\t$scope.duplicate = false;\r\n\r\n\t\t$scope.busy = false;\r\n\r\n\t\t$scope.cancel = function(){\r\n\t\t\tHelper.cancel();\r\n\t\t}\t\t\r\n\r\n\t\t$scope.checkDuplicate = function(){\r\n\t\t\tHelper.post('/payroll-process/check-duplicate', $scope.payroll_process)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.duplicate = data;\r\n\t\t\t\t})\r\n\t\t}\r\n\r\n\t\t$scope.submit = function(){\r\n\t\t\tif($scope.payrollProcessForm.$invalid){\r\n\t\t\t\tangular.forEach($scope.payrollProcessForm.$error, function(field){\r\n\t\t\t\t\tangular.forEach(field, function(errorField){\r\n\t\t\t\t\t\terrorField.$setTouched();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(!$scope.duplicate)\r\n\t\t\t{\r\n\t\t\t\t$scope.busy = true;\r\n\r\n\t\t\t\tif($scope.config.action == 'create')\r\n\t\t\t\t{\r\n\t\t\t\t\tHelper.post('/payroll-process', $scope.payroll_process)\r\n\t\t\t\t\t\t.success(function(duplicate){\r\n\t\t\t\t\t\t\tif(duplicate){\r\n\t\t\t\t\t\t\t\t$scope.busy = false;\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tHelper.stop();\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\t\t$scope.busy = false;\r\n\t\t\t\t\t\t\t$scope.error = true;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif($scope.config.action == 'edit')\r\n\t\t\t\t{\r\n\t\t\t\t\tHelper.put('/payroll-process/' + $scope.config.id, $scope.payroll_process)\r\n\t\t\t\t\t\t.success(function(duplicate){\r\n\t\t\t\t\t\t\tif(duplicate){\r\n\t\t\t\t\t\t\t\t$scope.busy = false;\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tHelper.stop();\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\t\t$scope.busy = false;\r\n\t\t\t\t\t\t\t$scope.error = true;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tHelper.get('/payroll')\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.payrolls = data;\r\n\t\t\t})\r\n\r\n\t\tHelper.get('/batch')\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.batches = data;\r\n\t\t\t})\r\n\t}]);","payroll\r\n\t.controller('payrollSubheaderController', ['$scope', '$state', 'Helper', function($scope, $state, Helper){\r\n\t\tvar setInit = function(data){\r\n\t\t\tHelper.set(data);\r\n\r\n\t\t\t$scope.$emit('setInit');\r\n\t\t}\r\n\r\n\t\t$scope.subheader.navs = [\r\n\t\t\t// Payroll Process\r\n\t\t\t{\r\n\t\t\t\t'label':'Payroll Processes',\r\n\t\t\t\t'url': '/payroll-process/enlist',\r\n\t\t\t\t'request' : {\r\n\t\t\t\t\t'with' : [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'relation':'batch',\r\n\t\t\t\t\t\t\t'withTrashed': false,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'relation':'payroll',\r\n\t\t\t\t\t\t\t'withTrashed': false,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'relation':'payroll_period',\r\n\t\t\t\t\t\t\t'withTrashed': false,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t\t'paginate':20,\r\n\t\t\t\t},\r\n\t\t\t\t'fab': {\r\n\t\t\t\t\t'fullscreen' : true,\r\n\t\t\t\t\t'controller':'payrollProcessDialogController',\r\n\t\t\t\t\t'template':'/app/components/payroll/templates/dialogs/payroll-process-form-dialog.template.html',\r\n\t\t\t\t\t'message': 'Payroll process saved.',\r\n\t\t\t\t\t'action' : 'create',\r\n\t\t\t\t\t'fullscreen' : true,\r\n\t\t\t\t\t'url': '/payroll-process',\r\n\t\t\t\t\t'label': 'Payroll process',\r\n\t\t\t\t},\r\n\t\t\t\t'menu': [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'label': 'Edit',\r\n\t\t\t\t\t\t'icon': 'mdi-pencil',\r\n\t\t\t\t\t\t'show': true,\r\n\t\t\t\t\t\taction: function(data){\r\n\t\t\t\t\t\t\tdata.action = 'edit';\r\n\t\t\t\t\t\t\tdata.url = '/payroll-process';\r\n\t\t\t\t\t\t\tdata.label = 'Payroll process';\r\n\r\n\t\t\t\t\t\t\tHelper.set(data);\r\n\r\n\t\t\t\t\t\t\tvar dialog = {};\r\n\t\t\t\t\t\t\tdialog.controller = 'payrollProcessDialogController';\r\n\t\t\t\t\t\t\tdialog.template = '/app/components/payroll/templates/dialogs/payroll-process-form-dialog.template.html';\r\n\r\n\t\t\t\t\t\t\tHelper.customDialog(dialog)\r\n\t\t\t\t\t\t\t\t.then(function(){\r\n\t\t\t\t\t\t\t\t\tHelper.notify('Payroll process updated.');\r\n\t\t\t\t\t\t\t\t\t$scope.$emit('refresh');\r\n\t\t\t\t\t\t\t\t}, function(){\r\n\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'label': 'Delete',\r\n\t\t\t\t\t\t'icon': 'mdi-delete',\r\n\t\t\t\t\t\t'show': true,\r\n\t\t\t\t\t\taction: function(data){\r\n\t\t\t\t\t\t\tvar dialog = {};\r\n\t\t\t\t\t\t\tdialog.title = 'Delete';\r\n\t\t\t\t\t\t\tdialog.message = 'Delete ' + new Date(data.payroll_period.start_cut_off).toLocaleDateString() + ' - ' + new Date(data.payroll_period.end_cut_off).toLocaleDateString() + ' payroll process?'\r\n\t\t\t\t\t\t\tdialog.ok = 'Delete';\r\n\t\t\t\t\t\t\tdialog.cancel = 'Cancel';\r\n\r\n\t\t\t\t\t\t\tHelper.confirm(dialog)\r\n\t\t\t\t\t\t\t\t.then(function(){\r\n\t\t\t\t\t\t\t\t\tHelper.delete('/payroll-process/' + data.id)\r\n\t\t\t\t\t\t\t\t\t\t.success(function(){\r\n\t\t\t\t\t\t\t\t\t\t\tHelper.notify('Payroll process deleted.');\r\n\t\t\t\t\t\t\t\t\t\t\t$scope.$emit('refresh');\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\t\t\t\t\t\tHelper.error();\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}, function(){\r\n\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t\tview: function(data){\r\n\t\t\t\t\t$state.go('main.payroll-process', {payrollProcessID: data.id});\r\n\t\t\t\t},\r\n\t\t\t\taction: function(current){\r\n\t\t\t\t\tsetInit(current);\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t];\r\n\r\n\t\tsetInit($scope.subheader.navs[0]);\r\n\t}]);","payroll\r\n\t.controller('payrollEntryToolbarController', ['$scope', '$filter', function($scope, $filter){\r\n\t\t$scope.toolbar.childState = 'Payroll Entry';\r\n\r\n\t\t$scope.$on('close', function(){\r\n\t\t\t$scope.hideSearchBar();\r\n\t\t});\r\n\r\n\t\t$scope.toolbar.getItems = function(query){\r\n\t\t\tvar results = query ? $filter('filter')($scope.toolbar.items, query) : $scope.toolbar.items;\r\n\t\t\treturn results;\r\n\t\t}\r\n\r\n\t\t$scope.toolbar.hideSearchIcon = true;\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.model.busy = true;\r\n\t\t\t$scope.searchBar = true;\r\n\t\t\t$scope.showInactive = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.searchBar = false;\r\n\t\t\t$scope.toolbar.searchText = '';\r\n\t\t\t$scope.toolbar.searchItem = '';\r\n\t\t\t/* Cancels the paginate when the user sent a query */\r\n\t\t\tif($scope.searched){\r\n\t\t\t\t$scope.model.page = 1;\r\n\t\t\t\t$scope.model.no_matches = false;\r\n\t\t\t\t$scope.model.items = [];\r\n\t\t\t\t$scope.searched = false;\r\n\t\t\t\t$scope.$emit('refresh');\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\t$scope.$emit('search');\r\n\t\t\t$scope.searched = true;\r\n\t\t};\r\n\t}]);","payroll\r\n\t.controller('payrollProcessToolbarController', ['$scope', '$filter', function($scope, $filter){\r\n\t\t$scope.$on('close', function(){\r\n\t\t\t$scope.hideSearchBar();\r\n\t\t});\r\n\r\n\t\t$scope.toolbar.getItems = function(query){\r\n\t\t\tvar results = query ? $filter('filter')($scope.toolbar.items, query) : $scope.toolbar.items;\r\n\t\t\treturn results;\r\n\t\t}\r\n\r\n\t\t$scope.toolbar.searchAll = true;\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.model.busy = true;\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.searchBar = false;\r\n\t\t\t$scope.toolbar.searchText = '';\r\n\t\t\t$scope.toolbar.searchItem = '';\r\n\t\t\t/* Cancels the paginate when the user sent a query */\r\n\t\t\tif($scope.searched){\r\n\t\t\t\t$scope.model.page = 1;\r\n\t\t\t\t$scope.model.no_matches = false;\r\n\t\t\t\t$scope.model.items = [];\r\n\t\t\t\t$scope.searched = false;\r\n\t\t\t\t$scope.$emit('refresh');\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\t$scope.$emit('search');\r\n\t\t\t$scope.searched = true;\r\n\t\t};\r\n\t}]);","payroll\r\n\t.controller('payrollToolbarController', ['$scope', '$filter', function($scope, $filter){\r\n\t\t$scope.toolbar.childState = 'Payroll';\r\n\r\n\t\t$scope.$on('close', function(){\r\n\t\t\t$scope.hideSearchBar();\r\n\t\t});\r\n\r\n\t\t$scope.toolbar.getItems = function(query){\r\n\t\t\tvar results = query ? $filter('filter')($scope.toolbar.items, query) : $scope.toolbar.items;\r\n\t\t\treturn results;\r\n\t\t}\r\n\r\n\t\t$scope.toolbar.searchAll = true;\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.type.busy = true;\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.searchBar = false;\r\n\t\t\t$scope.toolbar.searchText = '';\r\n\t\t\t$scope.toolbar.searchItem = '';\r\n\t\t\t/* Cancels the paginate when the user sent a query */\r\n\t\t\tif($scope.searched){\r\n\t\t\t\t$scope.type.page = 1;\r\n\t\t\t\t$scope.type.no_matches = false;\r\n\t\t\t\t$scope.type.items = [];\r\n\t\t\t\t$scope.searched = false;\r\n\t\t\t\t$scope.$emit('refresh');\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\t$scope.$emit('search');\r\n\t\t\t$scope.searched = true;\r\n\t\t};\r\n\t}]);"],"sourceRoot":"/source/"}